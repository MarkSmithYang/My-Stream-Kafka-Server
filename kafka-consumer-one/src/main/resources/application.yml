#设置服务端口
server:
  port: 9901
spring:
  cloud:
    stream:
      kafka:
        binder:
          #可通过配置group的方式来配置消费服务启动之前为消费的消息,不配置则之前消息无法消费(丢失)
          brokers: localhost:9092
      bindings:
        #自定义输入通道名称
        input_msg:
          #加入消费组(同一个组的服务只能有一个能消费到消息)
          group: Group-1
          #这里为了对照不把它加入这个组,它就会每次都能消费消息了(发布订阅模式的特性),加入了组,就不一定能消费到了,
          #实测加入同一个组的服务,会优先选择先启动的一直去消费,而不是切换服务去消费
          #group: Group-1
          #设置自定义输入通道的消费的主题
          destination: topic-1
        input:
          #这里设置了分组以后(发布订阅模式其实变成了消息队列的形式,当这个组里有其他的服务的时候,会优先挑选先启动的那个服务区消费)
          #我这里只有一个服务,这里分组的目的是为了不丢失服务挂掉或没有启动之前发送的消息,因为是发布订阅模式,实测,如果不设置分组,那么
          #服务未启动前发送的消息,在服务启动后是无法消费到的,而设置了这个组以后,未启动前发送的消息会在服务启动后去消费 消息(实测)
          group: Group-2
          #设置自定义输入通道的消费的主题,这里消费的是操作日志推送过来的消息
          #(最开始不通,把这边的配置粘贴下,改了下就可以了,我真没看出什么差别,但是就是可以了,只要主题一致,使用内置的通道就实现了消息的消费)
          destination: log-kafka-topic